---
import Layout from '../layouts/Layout.astro';

const { cookies, url } = Astro;
const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

// If user is already logged in, redirect to home
if (accessToken && refreshToken) {
  return Astro.redirect("/");
}

// Get the access token from the URL
const accessTokenFromUrl = url.searchParams.get('access_token');
const type = url.searchParams.get('type');

// If this is not a password reset link, redirect to sign in
if (type !== 'recovery' || !accessTokenFromUrl) {
  return Astro.redirect("/signin");
}
---

<Layout title="Reset Password">
  <div class="relative h-screen w-full flex justify-center items-center bg-creme bg-[url(background.png)] bg-size-[auto_150px] diagonal-scroll">
    <form class="flex flex-col gap-4 w-full md:w-fit md:mx-none mx-12" id="reset-password-form">
      <img class="h-64 w-fit self-center mb-8" src="logo.png">
      <div class="flex flex-col gap-4">
        <label id="warning" class="text-xs text-red-700"></label>
        <input 
          type="password" 
          name="password" 
          id="password" 
          autocomplete="new-password" 
          required 
          placeholder="New Password" 
          class="rounded-md bg-satured-creme px-4 py-2 text-sm text-mustard placeholder:text-super-saturated-creme appearance-none outline-mustard focus:outline-2 lg:w-full w-full transition-all duration-50"
        >
        <input 
          type="password" 
          name="confirmPassword" 
          id="confirmPassword" 
          autocomplete="new-password" 
          required 
          placeholder="Confirm New Password" 
          class="rounded-md bg-satured-creme px-4 py-2 text-sm text-mustard placeholder:text-super-saturated-creme appearance-none outline-mustard focus:outline-2 lg:w-full w-full transition-all duration-50"
        >
      </div>
      <button type="submit" class="mt-16 relative flex w-full justify-center text-sm/6 font-semibold text-neutral-950 focus-visible:outline-2 focus-visible:outline-offset-2 hover:scale-105 hover:cursor-pointer transition-all duration-150">
        <svg width="121" height="" viewBox="0 0 121 41" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M42.0968 32.7711C42.0968 32.7711 48.2274 36.4367 62.1484 35.9153C82.5502 35.1511 97.0507 31.1062 106.123 27.5108C112.184 25.109 110.616 17.8444 103.476 15.0898C88.0794 9.15017 62.964 2.55861 41.8515 11.5553" stroke="#FF9351" stroke-width="10"/>
          <path d="M43.1075 32.5001C38.0433 30.5001 37.9636 26.2655 38.0432 21.8992C38.1192 17.7254 37 12 43.1076 11.0001" stroke="#FF9351" stroke-width="10"/>
          <path d="M42 13.5L66.1552 7L109 19.4L109 27.2L55.8966 39L39 31.8L42 13.5Z" fill="#FF9351"/>
          <path d="M0.389648 29.4453L-5.29509e-05 19.8236L30.1136 22.0101L30.2182 24.5915L0.389648 29.4453Z" fill="#4B7E3A"/>
          <path d="M11.1528 40.3542L7.53111 33.5051L29.279 26.6708L30.2507 28.5084L11.1528 40.3542Z" fill="#4B7E3A"/>
          <path d="M9.79138 6.73779L6.7312 13.7533L29.7454 19.7714L30.5664 17.8892L9.79138 6.73779Z" fill="#4B7E3A"/>
        </svg>
        <span class="absolute text-dark-orange text-sm top-1/2 left-1/2 -translate-x-1/3 -translate-y-1/2"> 
          Reset Password
        </span>
      </button>
    </form>
  </div>

  <script>
    const form = document.getElementById('reset-password-form');
    const warningLabel = document.getElementById('warning');

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const passwordInput = document.getElementById('password') as HTMLInputElement;
      const confirmPasswordInput = document.getElementById('confirmPassword') as HTMLInputElement;
      
      const password = passwordInput.value;
      const confirmPassword = confirmPasswordInput.value;

      // Basic password validation
      if (password.length < 6) {
        warningLabel!.textContent = 'Password must be at least 6 characters long';
        return;
      }

      if (password !== confirmPassword) {
        warningLabel!.textContent = 'Passwords do not match';
        return;
      }

      try {
        const response = await fetch('/api/auth/reset-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ 
            password,
            access_token: new URLSearchParams(window.location.search).get('access_token')
          }),
        });

        if (response.ok) {
          warningLabel!.textContent = 'Password reset successful! Redirecting to sign in...';
          warningLabel!.className = 'text-xs text-green-600';
          setTimeout(() => {
            window.location.href = '/signin';
          }, 2000);
        } else {
          const data = await response.json();
          warningLabel!.textContent = data.error || 'Failed to reset password';
        }
      } catch (error) {
        console.error('Error:', error);
        warningLabel!.textContent = 'An error occurred. Please try again.';
      }
    });
  </script>
</Layout> 